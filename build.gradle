plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.google.protobuf' version '0.8.19'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'io.grpc:grpc-netty-shaded:1.57.0'
    implementation 'io.grpc:grpc-protobuf:1.57.0'
    implementation 'io.grpc:grpc-stub:1.57.0'
    implementation 'com.google.protobuf:protobuf-java:3.23.4'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2' //jwt
}

protobuf {
    protoc {
        // protoc 컴파일러 버전 설정
        artifact = "com.google.protobuf:protoc:3.23.4"
    }
    plugins {
        grpc {
            // gRPC 플러그인 (protoc-gen-grpc-java) 버전 설정
            artifact = "io.grpc:protoc-gen-grpc-java:1.57.0"
        }
    }
    generateProtoTasks {
        all().each { task ->
            // .proto -> Java 소스 생성 시, grpc 플러그인을 사용하도록 설정
            task.plugins {
                grpc {}
            }
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
